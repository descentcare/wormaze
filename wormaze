#!/usr/bin/env bash

wallfs="\033[47m\033[30m#\033[0m"
playerfs="\033[44m\033[30m@\033[0m"
tailfs="\033[38mo\033[0m"
exitfs="\033[42m\033[30mO\033[0m"

box1width=20
box2width=13
height=15
lvl="$1"

cls(){
    printf "\033[2J\033[H"
}

move(){
    printf "\033[%sf" "$1"
}

get_term_size() {
    shopt -s checkwinsize; (:;:)
    [[ -z "${LINES:+$COLUMNS}" ]] && read -r LINES COLUMNS < <(stty size)
}

load_lvl() {
    i=0
    WALLS=()
    TAIL=()
    while read -r line; do
        case $i in
            0) PLAYERPOS=$line; i=$((i+1)) ;;
            1) EXITPOS=$line; i=$((i+1)) ;;
            *) WALLS+=("$line") ;;
        esac
    done <"$1"
    IFS=';'
    read -r y x <<< "$PLAYERPOS"
    PLAYERPOS="$((y+startline+1));$((x+startcol+1))"
    read -r y x <<< "$EXITPOS"
    EXITPOS="$((y+startline+1));$((x+startcol+1))"
    for i in "${!WALLS[@]}"; do
        read -r y x <<< "${WALLS[i]}"
        WALLS["$i"]="$((y+startline+1));$((x+startcol+1))"
    done
}

draw_box(){
    move "$1"
    printf "┌────────────────────┬─────────────┐"
    move "$1"
    for ((i=1;i<="$height";i++)); do
        printf "\033[1B│\033[%dC│\033[%dC│\033[%dD" "$box1width" "$box2width" "$((box1width+box2width+3))"
    done
    printf "\033[1B└────────────────────┴─────────────┘"
    move "$1"
    printf "\033[4B\033[%dCh,a - left" "$((box1width+3))"
    move "$1"
    printf "\033[5B\033[%dCj,s - down" "$((box1width+3))"
    move "$1"
    printf "\033[6B\033[%dCk,w - up" "$((box1width+3))"
    move "$1"
    printf "\033[7B\033[%dCl,d - right" "$((box1width+3))"
    move "$1"
    printf "\033[9B\033[%dCreach %b" "$((box1width+3))" "$exitfs"
    move "$1"
    printf "\033[11B\033[%dCq - exit" "$((box1width+3))"
    move "$1"
    printf "\033[12B\033[%dCr - restart" "$((box1width+3))"

    move "0;0"
}

win(){
    move "$((startline+height+1));$((startcol))"
    printf "├"
    move "$((startline+height+1));$((startcol+box1width+box2width+2))"
    printf "┤"
    move "$((startline+height+2));$((startcol))"
    printf "│ YOU WIN!\033[%dC│" "$((box1width+box2width-8))"
    move "$((startline+height+2));$((startcol))"
    printf "\033[1B└──────────────────────────────────┘"
    move "0;0"
    exit
}

lose(){
    move "$((startline+height+1));$((startcol))"
    printf "├"
    move "$((startline+height+1));$((startcol+box1width+box2width+2))"
    printf "┤"
    move "$((startline+height+2));$((startcol))"
    printf "│ YOU LOSE!\033[%dC│" "$((box1width+box2width-9))"
    move "$((startline+height+2));$((startcol))"
    printf "\033[1B└──────────────────────────────────┘"
    move "0;0"
    exit
}

draw_map(){
    move "$PLAYERPOS"
    printf "%b" "$playerfs"
    move "$EXITPOS"
    printf "%b" "$exitfs"
    for e in "${WALLS[@]}"; do
        move "$e"
        printf "%b" "$wallfs"
    done
}

isnotstop(){
    for e in "${TAIL[@]}"; do
        if [[ "$e" = "$1" ]]; then
            return 1
        fi
    done
    for e in "${WALLS[@]}"; do
        if [[ "$e" = "$1" ]]; then
            return 1
        fi
    done
    return 0
}

move_left(){
    IFS=';'
    read -r y x <<< "$PLAYERPOS"
    x=$((x-1))
    while isnotstop "$y;$x"; do
        TAIL+=("$PLAYERPOS")
        move "$PLAYERPOS"
        printf "%b" "$tailfs"
        if [[ "$y;$x" = "$EXITPOS" ]]; then
            win
            exit
        fi
        if [[ "$x" -le "$startcol" ]]; then
            lose
            exit
        fi
        PLAYERPOS="$y;$x"
        x=$((x-1))
    done
    move "$PLAYERPOS"
    printf "%b" "$playerfs"
    move "0;0"
}

move_right(){
    IFS=';'
    read -r y x <<< "$PLAYERPOS"
    x=$((x+1))
    while isnotstop "$y;$x"; do
        TAIL+=("$PLAYERPOS")
        move "$PLAYERPOS"
        printf "%b" "$tailfs"
        if [[ "$y;$x" = "$EXITPOS" ]]; then
            win
            exit
        fi
        if [[ "$x" -ge $((startcol+box1width+1)) ]]; then
            lose
            exit
        fi
        PLAYERPOS="$y;$x"
        x=$((x+1))
    done
    move "$PLAYERPOS"
    printf "%b" "$playerfs"
    move "0;0"
}

move_up(){
    IFS=';'
    read -r y x <<< "$PLAYERPOS"
    y=$((y-1))
    while isnotstop "$y;$x"; do
        TAIL+=("$PLAYERPOS")
        move "$PLAYERPOS"
        printf "%b" "$tailfs"
        if [[ "$y;$x" = "$EXITPOS" ]]; then
            win
            exit
        fi
        if [[ "$y" -le "$startline" ]]; then
            lose
            exit
        fi
        PLAYERPOS="$y;$x"
        y=$((y-1))
    done
    move "$PLAYERPOS"
    printf "%b" "$playerfs"
    move "0;0"
}

move_down(){
    IFS=';'
    read -r y x <<< "$PLAYERPOS"
    y=$((y+1))
    while isnotstop "$y;$x"; do
        TAIL+=("$PLAYERPOS")
        move "$PLAYERPOS"
        printf "%b" "$tailfs"
        if [[ "$y;$x" = "$EXITPOS" ]]; then
            win
            exit
        fi
        if [[ "$y" -ge $((startline+height+1)) ]]; then
            lose
            exit
        fi
        PLAYERPOS="$y;$x"
        y=$((y+1))
    done
    move "$PLAYERPOS"
    printf "%b" "$playerfs"
    move "0;0"
}

reload_lvl(){
    cls
    get_term_size
    startline=$((LINES / 2 - 7))
    startcol=$((COLUMNS / 2 - 16))
    draw_box "$startline;$startcol"
    load_lvl "$1"
    draw_map
    move "0;0"
}

input(){
    case "${1: -1}" in
        h|a) move_left ;;
        j|s) move_down ;;
        k|w) move_up ;;
        l|d) move_right ;;
        r) reload_lvl "$lvl" ;;
        q) exit ;;
    esac
    
}

main() {
    reload_lvl "$lvl"
    for ((;;)); { read -rs -n 1 key; input "$key"; }
}

main "$@"
